name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8
        python -m nltk.downloader punkt
        python -c "import nltk; nltk.download('punkt')"
        
    - name: Create test dataset
      run: |
        mkdir -p dataset
        echo 'id,title,genres,keywords,overview,cast,crew
1,Movie 1,"[{""id"": 1, ""name"": ""Action""}]","[{""id"": 1, ""name"": ""hero""}]",Overview 1,"[{""name"": ""Actor 1""}]","[{""job"": ""Director"", ""name"": ""Director 1""}]"
2,Movie 2,"[{""id"": 2, ""name"": ""Drama""}]","[{""id"": 2, ""name"": ""family""}]",Overview 2,"[{""name"": ""Actor 2""}]","[{""job"": ""Director"", ""name"": ""Director 2""}]"' > dataset/tmdb_5000_movies.csv
        echo 'title,cast,crew
Movie 1,"[{""name"": ""Actor 1""}]","[{""job"": ""Director"", ""name"": ""Director 1""}]"
Movie 2,"[{""name"": ""Actor 2""}]","[{""job"": ""Director"", ""name"": ""Director 2""}]"' > dataset/tmdb_5000_credits.csv
        
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Run tests with pytest
      run: |
        export TEST_MODE=true
        pytest tests/ -v

  build-and-validate:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create test dataset
      run: |
        mkdir -p dataset
        echo 'id,title,genres,keywords,overview,cast,crew
1,Movie 1,"[{""id"": 1, ""name"": ""Action""}]","[{""id"": 1, ""name"": ""hero""}]",Overview 1,"[{""name"": ""Actor 1""}]","[{""job"": ""Director"", ""name"": ""Director 1""}]"
2,Movie 2,"[{""id"": 2, ""name"": ""Drama""}]","[{""id"": 2, ""name"": ""family""}]",Overview 2,"[{""name"": ""Actor 2""}]","[{""job"": ""Director"", ""name"": ""Director 2""}]"' > dataset/tmdb_5000_movies.csv
        echo 'title,cast,crew
Movie 1,"[{""name"": ""Actor 1""}]","[{""job"": ""Director"", ""name"": ""Director 1""}]"
Movie 2,"[{""name"": ""Actor 2""}]","[{""job"": ""Director"", ""name"": ""Director 2""}]"' > dataset/tmdb_5000_credits.csv
        
    - name: Train and validate model
      run: |
        export TEST_MODE=true
        python movie_recommender.py
        
    - name: Create artifacts directory
      run: mkdir -p artifacts
        
    - name: Upload MLflow artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mlflow-artifacts
        path: |
          mlruns/
          models/
          artifacts/
          *_recommendations.csv
          *_method_comparison.csv

  deploy:
    needs: build-and-validate
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Download MLflow artifacts
      uses: actions/download-artifact@v4
      with:
        name: mlflow-artifacts
        path: mlruns/
        
    - name: Deploy model (simulation)
      run: |
        echo "Model would be deployed here in production environment"
